
Erstelle eine Art CMD-Klon, der ein paar gängige Befehle entgegen nimmt.
Beispielsweise die Navigation, Erstellung, Benennung und Löschung von Dateien.

Befehle in CMD:
  - cd		-> change directory
  - cls		-> clears the terminal screen (Linux: clear)
  - dir		-> list current directory files and folders (vgl. Linux: ls)
  - echo	-> print messages in terminal
  - exit	-> exit the terminal (program end)
  - help	-> print all commands with a basic explanation
  - move	-> moves files or directories to a new location (vgl. Linux: mv)

Baue die Funktion dieser Befehle in primitiver Form in Python nach.
Es soll so aussehen, als würde man wirklich CMD verwenden,
nur eben in einer abgespeckten Version.

Wenn es darum geht ob man eine oder mehrere Dateien bzw. Ordner bearbeiten kann,
dann bitte nur den Fall für die Einzelvariante berücksichtigen.
Die anderen Fälle können wie Syntaxfehler bzw. falsche Eingaben gehandhabt werden.

Das bedeutet, spezielle Funktionen müssen nicht gegeben sein,
lediglich die oben aufgeführten Funktionen im Standard.

Die spezielle Aufrufweise von echo mit "echo.", "echo,", "echo;" und "echo:"
kann vernachlässigt werden. Wenn du willst kannst du es aber hinzufügen.
Was dabei passiert, ist lediglich eine leere Zeile auszugeben.

(Tipp: Das kann später hilfreich sein, wenn man in einem Skript leere Zeile ausgeben möchte.)

> Die "/?" help pages oder Hilfeseiten generell können vernachlässigt werden.



Bonus:

Erweitere dein CMD mit folgenden Befehlen:
  - chdir	-> change directory or show current directory name
  - copy	-> copy files or directories (vgl. Linux: cp)
  - del		-> delete file(s) (vgl. Linux: rm)
  - erase	-> delete file(s) (vgl. Linux: rm)
  - mkdir	-> create a directory
  - md		-> create a directory (duplicate)
  - rmdir	-> remove a directory (recursivly)


Extra Bonus:

- Füge einen Befehl hinzu der leere Dateien erstellt (vgl. Linux: touch)
- Gib die Möglichkeit ein Skript auszuführen, dass die Befehle deines CMDs
  so verarbeitet, als würdest du sie von Hand eingeben (vgl. call und Batch).


Nice to have:
- Modifiziere das Programm so, dass es bei einem Skriptaufruf leere Zeilen ignoriert
  und keine Leerzeile nach jedem Command ausgibt, nur einmal am Ende vielleicht.
(Das hier habe ich nicht implementiert, kannst es aber gerne trotzdem machen. :) )

