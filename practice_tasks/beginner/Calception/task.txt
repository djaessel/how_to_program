
Today we are going to take a look into recursion and kinda reusing the same code again and again.

There is a difference between loops and recursion.

A look is usually based on some condition and then executes code and when the condition is met, it stops.
Well and continues with the code after.

Recursion is something that works in a way similar at times, but is technically completely different.

You can for example write a funtion that calls itself.
And that would in theory work, but practically crash the program at some point or who knows what...

So you might want to add a condition to it and only call itself as long as that is either true or false,
depending on what you want to check and so on.

The goal should be, that the function does indeed stop at some point, 
but would have been called multiple times by itself prior to its end.

One example would be to write a basic character removal function.

So lets do that.

Task:
- write a program that can remove characters from strings
- each character should be removed at a time (not all occurences at once - in a way)
- make it reusable and kinda safe
- work with the given set of characters that should be removed
- use the test txt files for the function and save the resulting texts in another file
- dont use any special "pyton magic" (if possible)
- meaning no use of already implemented functions from python that do such things
- only basic functions like range, your own functions and file reading/writing functions are allowed

(In the Bonus part we will look at better methods.)


The characters you shall use for filtering are in the file: "filter_characters.txt"
In this file are all characters separated by TABULATOR, which is a special text file format, sometimes used by companies (e.g. Amazon).

Try to decode the hidden messages :)
Have fun!



Bonus:

Now get got ourselves some new decrypted files.
First we still need to remove some characters as before and then we also need to get the correct words out.

Ignore the old test files for the bonus and just use the "bonus_test*" files.

I hope you are familiar with the way the romans encrypted their messages.
If not, here a short summary:
- They used a stick and rotated characters around it
- depending on the given rotation count all characters were moved
- to decrypt one simply had to wrap around the stick and rotate the given number

So you should add a rotation through all possible characters (basic ASCII characters A-Z) and 
print out the decrypted result. When the result makes sense, the user can give input and save the result.
Otherwise it rotates until then end and stops.


To make it a little easier to reuse, maintain and modify the code for removing "invalid" characters,
try to use a regular expression.

If you don't know what it is, take a look at: <a href='https://regexr.com/'>RegExr.com</a>
There are a lot of examples and explanations.

In short, regular expressions are use to filter data with certain keywords and some logic,
without writing a lot of code to do it. Since the regular expression does most of the work by returning true or false.
So no long an complex if elif structures, just one or two maybe.

We also can get rid of looping through all characters and maybe just store the regular expression in the filter file.
Or if you want you can simply put it directly in the code, do as you like.

To make it a little easier.

The following should be allowed:
- basic numbers (e.g. 1235, 994, 0, -143354, 3.634)
- letters A-Z upper and lower
- spaces, commas, colon (no semi colon!)

All else should be declared invalid from now on and should be filtered out.


Extra bonus:

We already got a bit of help for the decoding, but it is still a little bit of a pain.
Especially with the latest files some evil super power created!
These messages are almost impossible to crack, but maybe you find a way to crack them anyway.

Hint: According to allied spies, some of the messages start with the same two words!
      Maybe it helps to decrypt the other messages as well.


Student: Is that an enigma we are...?
Teacher: Are we in the middle of WWII?
Student: Eh... no, of course not?!
Teacher: So why are you asking then?
Student: I...
Teacher: OF COURSE IT IS AN ENIGMA!
Student: Damn...
Teacher: Get to work Turing!
Student: Sir?!
Teacher: TO WORK!!!
Student: Alright, alright Mister Pickelton.


Something happened here, but no one knows. o_o

